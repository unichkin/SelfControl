#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

// Список вопросов отбора.
//
// Параметры:
//  Отбор - СправочникСсылка.ОтборыВопросов
//
// Возвращаемое значение:
//  Массив Из СправочникСсылка.Вопросы
//
Функция СписокВопросовОтбора(Отбор) Экспорт

	Схема = Справочники.ОтборыВопросов.ПолучитьМакет("СхемаОтбораВопросов");
	Настройки = Схема.НастройкиПоУмолчанию;
	НастройкиТекущие = Отбор.НастройкиСхемы.Получить();

	КомпоновкаДанныхКлиентСервер.СкопироватьЭлементы(Настройки.Отбор, НастройкиТекущие.Отбор);

	ВыбранныеПоля = Настройки.Структура[0].Выбор.Элементы[0].Элементы;
	ВыбПоле = ВыбранныеПоля.Добавить(Тип("ВыбранноеПолеКомпоновкиДанных"));
	ВыбПоле.Поле = Новый ПолеКомпоновкиДанных("Вопрос.ЭтоГруппа");

	КомпоновщикМакета = Новый КомпоновщикМакетаКомпоновкиДанных;
	Макет = КомпоновщикМакета.Выполнить(Схема, Настройки, , , Тип("ГенераторМакетаКомпоновкиДанныхДляКоллекцииЗначений"));

	ПроцКомпоновки = Новый ПроцессорКомпоновкиДанных;
	ПроцКомпоновки.Инициализировать(Макет);

	ТаблицаВопросов = Новый ТаблицаЗначений;

	ПроцВывода = Новый ПроцессорВыводаРезультатаКомпоновкиДанныхВКоллекциюЗначений;
	ПроцВывода.УстановитьОбъект(ТаблицаВопросов);
	ПроцВывода.Вывести(ПроцКомпоновки);

	Результат = Новый Массив;
	Для каждого СтрокаТаблицы Из ТаблицаВопросов Цикл
		Если СтрокаТаблицы.ВопросЭтоГруппа Тогда
			Продолжить;
		КонецЕсли;
		Результат.Добавить(СтрокаТаблицы.Вопрос);
	КонецЦикла;
	Возврат Результат;

КонецФункции

// Найти создать отбор по группе.
//
// Параметры:
//  ГруппаВопросов - СправочникСсылка.Вопросы
//  ПроверятьРодителей - Булево
//
// Возвращаемое значение:
//  СправочникСсылка.ОтборыВопросов
//
Функция НайтиСоздатьОтборПоГруппе(ГруппаВопросов, ПроверятьРодителей = Истина) Экспорт

	ОтборСсылка = НайтиЭлементОтбора(ГруппаВопросов);
	Если ЗначениеЗаполнено(ОтборСсылка) Тогда
		ОтборОбъект = ОтборСсылка.ПолучитьОбъект();
	Иначе
		ОтборОбъект = Справочники.ОтборыВопросов.СоздатьЭлемент();
		ОтборОбъект.ГруппаВопросов = ГруппаВопросов;

	КонецЕсли;

	Схема = Справочники.ОтборыВопросов.ПолучитьМакет("СхемаОтбораВопросов");
	ЭлементыОтбора = Схема.НастройкиПоУмолчанию.Отбор.Элементы;
	ЭлементыОтбора.Очистить();

	ЭлемОтбора = ЭлементыОтбора.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ЭлемОтбора.ПравоеЗначение = ГруппаВопросов;
	ЭлемОтбора.ВидСравнения = ВидСравненияКомпоновкиДанных.ВИерархии;
	ЭлемОтбора.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Вопрос");

	ОтборОбъект.НастройкиСхемы = Новый ХранилищеЗначения(Схема.НастройкиПоУмолчанию, Новый СжатиеДанных(9));

	Если ПроверятьРодителей Тогда
		СоздатьРодителей(ОтборОбъект);
	КонецЕсли;

	ОтборОбъект.Записать();

	Возврат ОтборОбъект.Ссылка;

КонецФункции

// Найти создать отбор по списку.
//
// Параметры:
//  МассивВопросов - Массив Из СправочникСсылка.Вопросы
//  Наименование - Строка - наименование отбора
//
// Возвращаемое значение:
//  СправочникСсылка.ОтборыВопросов
//
Функция НайтиСоздатьОтборПоСписку(МассивВопросов, Наименование) Экспорт

	СписокВопросов = Новый СписокЗначений();
	СписокВопросов.ЗагрузитьЗначения(МассивВопросов);

	Хэш = ОбщегоНазначения.КонтрольнаяСуммаСтрокой(СписокВопросов);
	ОтборСсылка = Справочники.ОтборыВопросов.НайтиПоРеквизиту("Хэш", Хэш);
	Если ЗначениеЗаполнено(ОтборСсылка) Тогда
		ОтборОбъект = ОтборСсылка.ПолучитьОбъект();
	Иначе
		ОтборОбъект = Справочники.ОтборыВопросов.СоздатьЭлемент();
		ОтборОбъект.Хэш = Хэш;
		ОтборОбъект.Наименование = Наименование;
	КонецЕсли;

	Схема = Справочники.ОтборыВопросов.ПолучитьМакет("СхемаОтбораВопросов");
	ЭлементыОтбора = Схема.НастройкиПоУмолчанию.Отбор.Элементы;
	ЭлементыОтбора.Очистить();

	ЭлемОтбора = ЭлементыОтбора.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ЭлемОтбора.ПравоеЗначение = СписокВопросов;
	ЭлемОтбора.ВидСравнения = ВидСравненияКомпоновкиДанных.ВСписке;
	ЭлемОтбора.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Вопрос");

	ОтборОбъект.НастройкиСхемы = Новый ХранилищеЗначения(Схема.НастройкиПоУмолчанию, Новый СжатиеДанных(9));

	ОтборОбъект.Записать();

	Возврат ОтборОбъект.Ссылка;

КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция НайтиЭлементОтбора(ГруппаВопросов)

	Запрос = Новый Запрос;
	Запрос.Текст =
		"ВЫБРАТЬ
		|	ОтборыВопросов.Ссылка КАК Ссылка
		|ИЗ
		|	Справочник.ОтборыВопросов КАК ОтборыВопросов
		|ГДЕ
		|	ОтборыВопросов.ГруппаВопросов = &ГруппаВопросов
		|	И ОтборыВопросов.ПометкаУдаления = Ложь";

	Запрос.УстановитьПараметр("ГруппаВопросов", ГруппаВопросов);

	РезультатЗапроса = Запрос.Выполнить();
	Если РезультатЗапроса.Пустой() Тогда
		Результат = Справочники.ОтборыВопросов.ПустаяСсылка();
	Иначе
		ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
		ВыборкаДетальныеЗаписи.Следующий();

		Результат = ВыборкаДетальныеЗаписи.Ссылка;
	КонецЕсли;

	Возврат Результат;

КонецФункции

Процедура СоздатьРодителей(ОтборОбъект)

	ПредОтборРодитель = Неопределено;
	ТекРодительВопросов = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ОтборОбъект.ГруппаВопросов, "Родитель");
	Пока ЗначениеЗаполнено(ТекРодительВопросов) Цикл
		ОтборРодитель = НайтиСоздатьОтборПоГруппе(ТекРодительВопросов, Ложь);
		Если ПредОтборРодитель = Неопределено Тогда
			ОтборОбъект.Родитель = ОтборРодитель;
		Иначе
			ОбъектПредОтбора = ПредОтборРодитель.ПолучитьОбъект();
			ОбъектПредОтбора.Родитель = ОтборРодитель;
			ОбъектПредОтбора.Записать();
		КонецЕсли;

		ПредОтборРодитель = ОтборРодитель;
		ТекРодительВопросов = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ТекРодительВопросов, "Родитель");
	КонецЦикла;

КонецПроцедуры

#КонецОбласти

#КонецЕсли
