#Область ПрограммныйИнтерфейс

#Область ДействияФормы

// Сортировка элементов внутри коллекции элемента-родителя
//
// Параметры:
//	Форма - УправляемаяФорма
//	ИменаЭлементов - Массив - с типом элемента "Строка", имена элементов в нужном порядке.
//		Предполагается, что элементы находятся на одном уровне внутри одного родителя.
//		Например можно сортировать поля колонок таблицы формы.
//  НомерСтартовогоЭлемента - Число - номер элемента, после которого надо производить сортировку
//
// Пример вызова:
// Допустим на форме есть ТаблицаФормы, с существующими фиксирвоанными колонками "Актив" и "Валюта".
// Необходимо в заданном порядке отсортировать идущие после них колонки. Вызов будет таким:
//	РаботаСДиалогамиСК.СортироватьЭлементы(ЭтотОбъект, ИменаЭлементовВНужномПорядке, 2)
//	, где 2 - это порядковый номер элемента "Валюта"
//
Процедура СортироватьЭлементы(Форма, ИменаЭлементов, НомерСтартовогоЭлемента = 0) Экспорт

	Если НЕ ЗначениеЗаполнено(ИменаЭлементов) Тогда
		Возврат;
	КонецЕсли;

	Родитель = Форма.Элементы[ИменаЭлементов[0]].Родитель;
	ОжидаемыйИндексЭлемента = НомерСтартовогоЭлемента - 1;
	Для каждого ИмяЭлемента Из ИменаЭлементов Цикл
		ОжидаемыйИндексЭлемента = ОжидаемыйИндексЭлемента + 1;

		ЭлемФормы = Форма.Элементы[ИмяЭлемента];
		ЭлемГруппы = Родитель.ПодчиненныеЭлементы[ОжидаемыйИндексЭлемента];
		Если ЭлемГруппы <> ЭлемФормы Тогда
			Форма.Элементы.Переместить(ЭлемФормы, Родитель, ЭлемГруппы);
		КонецЕсли;
	КонецЦикла;

КонецПроцедуры

Функция ЕстьПараметрыПриСоздании(Форма, ИменаПараметров, Отказ) Экспорт

	СписокПустых = Новый Массив;
	СписокПараметров = СтрРазделить(ИменаПараметров, ",");
	Для каждого ИмяПараметра Из СписокПараметров Цикл
		ИмяПараметра = СокрЛП(ИмяПараметра);
		ЗначениеПараметра = Неопределено;
		Если Форма.Параметры.Свойство(ИмяПараметра, ЗначениеПараметра) Тогда
			Если ЗначениеЗаполнено(СписокПустых) Тогда
				Продолжить;
			КонецЕсли;

			Если ОбщегоНазначенияКлиентСервер.ЕстьРеквизитИлиСвойствоОбъекта(Форма, ИмяПараметра) Тогда
				Форма[ИмяПараметра] = ЗначениеПараметра;
			КонецЕсли;

		Иначе
			СписокПустых.Добавить(ИмяПараметра);
		КонецЕсли;
	КонецЦикла;

	Если ЗначениеЗаполнено(СписокПустых) Тогда
		ТекстСообщения = СтрСоединить(СписокПустых, ",");
		Сообщить("Не обнаружены параметры: " + ТекстСообщения);
		Отказ = Истина;
	КонецЕсли;

	Возврат НЕ Отказ;

КонецФункции

#КонецОбласти

#Область ТабличныеЧасти

// Настройка отображения табличных частей формы, вызывается в событии формы "ПриСозданииНаСервере".
// - Определяются все таблицы формы, для каждой таблицы формы добавляется служебный реквизит "Отступ",
//	и связаный с ним элемент управления
// - Если у таблицы формы имеется группа-родитель, обладающая пустым свойством "ПутьКДаннымЗаголовка",
// в это свойство помещается путь к количеству строк таблицы. Для табличной части это путь к данным
// количества строк. Для прочих источников (типа ТаблицаЗначений, НаборЗаписей, и т.п.) создается
// спец. реквизит формы, который необходимо обновлять в событии "ПриИзменении" таблицы формы: для
// этого необходимо в обработчике данного события вызвать метод
// "РаботаСДиалогамиКлиентСервер.ОбновитьЗаголовкиТаблиц".
//
// Параметры:
// 	Форма - ФормаКлиентскогоПриложения
//	ИменаДобавляемых - Массив - имена добавляемых таблиц, регистр игнорируется
//	ИменаИсключаемых - Массив - имена исключаемых таблиц, регистр игнорируется
//
Процедура НастроитьТаблицыФормы(Форма, ИменаДобавляемых = Неопределено, ИменаИсключаемых = Неопределено) Экспорт

#Область ЗаполнениеУсловийОтбора
	ИсключатьЭлементы = ЗначениеЗаполнено(ИменаИсключаемых)
		И ТипЗнч(ИменаИсключаемых) = Тип("Массив");
	Если ИсключатьЭлементы Тогда
		ИменаИсключаемыхНРег = Новый Массив;
		Для каждого Имя Из ИменаИсключаемых Цикл
			ИменаИсключаемыхНРег.Добавить(НРег(СокрЛП(Имя)));
		КонецЦикла;
	КонецЕсли;

	ДобавлятьЭлементыСОтбором = ЗначениеЗаполнено(ИменаДобавляемых)
		И ТипЗнч(ИменаДобавляемых) = Тип("Массив");
	Если ДобавлятьЭлементыСОтбором Тогда
		ИменаДобавляемыхНРег = Новый Массив;
		Для каждого Имя Из ИменаДобавляемых Цикл
			ИменаДобавляемыхНРег.Добавить(НРег(СокрЛП(Имя)));
		КонецЦикла;
	КонецЕсли;
#КонецОбласти

	РазмещенияТаблиц = Новый ДеревоЗначений;
	РазмещенияТаблиц.Колонки.Добавить("Имя", Новый ОписаниеТипов("Строка"));
	РазмещенияТаблиц.Колонки.Добавить("ПутьКДанным", Новый ОписаниеТипов("Строка"));

#Область ЗаполнениеРазмещенийТаблиц
	Для каждого ЭлемФормы Из Форма.Элементы Цикл
		Если ТипЗнч(ЭлемФормы) = Тип("ТаблицаФормы") Тогда
			Если ИсключатьЭлементы ИЛИ ДобавлятьЭлементыСОтбором Тогда
				ИмяНРег = НРег(ЭлемФормы.Имя);
				Если ИсключатьЭлементы И ИменаИсключаемыхНРег.Найти(ИмяНРег) <> Неопределено Тогда
					Продолжить;
				КонецЕсли;
				Если ДобавлятьЭлементыСОтбором И ИменаДобавляемыхНРег.Найти(ИмяНРег) = Неопределено Тогда
					Продолжить;
				КонецЕсли;
			КонецЕсли;

			Источник = Вычислить("Форма." + ЭлемФормы.ПутьКДанным);
			ТипИсточника = ТипЗнч(Источник);
			Если ТипИсточника = Тип("ДинамическийСписок") Тогда
				Продолжить;
			КонецЕсли;

			ИмяРодителя = "";
			Если ТипЗнч(ЭлемФормы.Родитель) = Тип("ГруппаФормы") Тогда
				ИмяРодителя = ЭлемФормы.Родитель.Имя;
			КонецЕсли;

			УзелРодителя = РазмещенияТаблиц.Строки.Найти(ИмяРодителя, "Имя");
			Если УзелРодителя = Неопределено Тогда
				УзелРодителя = РазмещенияТаблиц.Строки.Добавить();
				УзелРодителя.Имя = ИмяРодителя;
			КонецЕсли;

			УзелТаблицы = УзелРодителя.Строки.Добавить();
			УзелТаблицы.Имя = ЭлемФормы.Имя;
			УзелТаблицы.ПутьКДанным = ЭлемФормы.ПутьКДанным;
		КонецЕсли;
	КонецЦикла;
#КонецОбласти

	Если НЕ ЗначениеЗаполнено(РазмещенияТаблиц.Строки) Тогда
		Возврат;
	КонецЕсли;

#Область ДобавлениеРеквизитовФормы
	ДобавляемыеРеквизиты = Новый Массив;
	ТипСтрока1 = ОписаниеТипа("Строка", 1);
	ТипЧисло = ОписаниеТипа("Число");

	Если ОбщегоНазначенияКлиентСервер.ЕстьРеквизитИлиСвойствоОбъекта(Форма, "КэшНастройкиТаблиц") Тогда
		ЗначенияКэшаРеквизитов = Новый Структура(Форма.КэшНастройкиТаблиц);
	Иначе
		РеквизитФормы = Новый РеквизитФормы("КэшНастройкиТаблиц", Новый ОписаниеТипов(Неопределено));
		ДобавляемыеРеквизиты.Добавить(РеквизитФормы);

		ЗначенияКэшаРеквизитов = Новый Структура;
	КонецЕсли;

	Если НЕ ЗначенияКэшаРеквизитов.Свойство("РеквизитыИтогов") Тогда
		ЗначенияКэшаРеквизитов.Вставить("РеквизитыИтогов", Новый Структура);
	КонецЕсли;

	Для каждого УзелРодителя Из РазмещенияТаблиц.Строки Цикл
		Для каждого УзелТаблицы Из УзелРодителя.Строки Цикл
			ЭлементТаблицы = Форма.Элементы[УзелТаблицы.Имя];
			РеквизитыТаблицы = Форма.ПолучитьРеквизиты(ЭлементТаблицы.ПутьКДанным);
			ЕстьРеквизитОтступ = ОбщегоНазначенияКлиентСервер.ЕстьЗначениеСписка(РеквизитыТаблицы, "Имя", "Отступ");
			Если НЕ ЕстьРеквизитОтступ Тогда
				РеквизитФормы = Новый РеквизитФормы("Отступ", ТипСтрока1, ЭлементТаблицы.ПутьКДанным);
				ДобавляемыеРеквизиты.Добавить(РеквизитФормы);
			КонецЕсли;

			Если НЕ ОбщегоНазначенияКлиентСервер.ЕстьЗначениеСписка(РеквизитыТаблицы, "Имя", "КоличествоСтрок") Тогда
				Если НЕ ЗначенияКэшаРеквизитов.РеквизитыИтогов.Свойство(ЭлементТаблицы.Имя) Тогда
					ИмяРеквизитаИтога = УзелТаблицы.Имя + "_КоличествоСтрок";
					РеквизитФормы = Новый РеквизитФормы(ИмяРеквизитаИтога, ТипЧисло);
					ДобавляемыеРеквизиты.Добавить(РеквизитФормы);

					ОписаниеПутиИтога = Новый Структура("ИмяТаблицы, ИмяРеквизитаИтога", ЭлементТаблицы.ПутьКДанным, ИмяРеквизитаИтога);
					ЗначенияКэшаРеквизитов.РеквизитыИтогов.Вставить(ЭлементТаблицы.Имя, ОписаниеПутиИтога);
				КонецЕсли;
			КонецЕсли;
		КонецЦикла;
	КонецЦикла;

	Если ЗначениеЗаполнено(ДобавляемыеРеквизиты) Тогда
		Форма.ИзменитьРеквизиты(ДобавляемыеРеквизиты);
	КонецЕсли;

	Форма.КэшНастройкиТаблиц = Новый ФиксированнаяСтруктура(ЗначенияКэшаРеквизитов);
#КонецОбласти

#Область ОбработкаЭлементовТаблиц
	Для каждого УзелРодителя Из РазмещенияТаблиц.Строки Цикл
		КолПодчиненныхТаблиц = УзелРодителя.Строки.Количество();

		ГруппаРодитель = Неопределено;
		Если ЗначениеЗаполнено(УзелРодителя.Имя) Тогда
			ГруппаРодитель = Форма.Элементы[УзелРодителя.Имя];
		КонецЕсли;

		УстанавливатьПутьКЗаголовку = Истина
			И КолПодчиненныхТаблиц = 1
			И ГруппаРодитель <> Неопределено
			И ОбщегоНазначенияКлиентСервер.ЕстьРеквизитИлиСвойствоОбъекта(ГруппаРодитель, "ПутьКДаннымЗаголовка")
			И НЕ ЗначениеЗаполнено(ГруппаРодитель.ПутьКДаннымЗаголовка);

		Для каждого УзелТаблицы Из УзелРодителя.Строки Цикл
			ЭлементТаблицы = Форма.Элементы[УзелТаблицы.Имя];
			Если УстанавливатьПутьКЗаголовку Тогда
				ОписаниеПутиИтога = Неопределено;
				Если ЗначенияКэшаРеквизитов.РеквизитыИтогов.Свойство(ЭлементТаблицы.Имя, ОписаниеПутиИтога) Тогда
					ГруппаРодитель.ПутьКДаннымЗаголовка = ОписаниеПутиИтога.ИмяРеквизитаИтога;
				Иначе
					ГруппаРодитель.ПутьКДаннымЗаголовка = ЭлементТаблицы.ПутьКДанным + ".КоличествоСтрок";
				КонецЕсли;
			КонецЕсли;

			ИмяЭлементаОтступ = ЭлементТаблицы.Имя + "Отступ";
			ЕстьЭлементОтступ = ЭлементТаблицы.ПодчиненныеЭлементы.Найти(ИмяЭлементаОтступ) <> Неопределено;
			Если НЕ ЕстьЭлементОтступ Тогда
				ПолеОтступ = Форма.Элементы.Добавить(ИмяЭлементаОтступ, Тип("ПолеФормы"), ЭлементТаблицы);
				ПолеОтступ.Вид = ВидПоляФормы.ПолеВвода;
				ПолеОтступ.ТолькоПросмотр = Истина;
				ПолеОтступ.ПутьКДанным = ЭлементТаблицы.ПутьКДанным + ".Отступ";
				ПолеОтступ.ПоложениеЗаголовка = ПоложениеЗаголовкаЭлементаФормы.Нет;
			КонецЕсли;
		КонецЦикла;
	КонецЦикла;
#КонецОбласти

	РаботаСДиалогамиКлиентСервер.ОбновитьЗаголовкиТаблиц(Форма);

КонецПроцедуры

#КонецОбласти

#КонецОбласти
