#Область ПрограммныйИнтерфейс

#Область ФормаНастроек

// Вызывается перед закрытием формы-редактора настроек.
//
// Параметры:
//	Форма - ОкноКлиентскогоПриложения - форма-редактор настроек
//	Оповещение - ОписаниеОповещения - метод формы, отвечающий за запись настроек. Принимает в себя первый параметр
//	из метода "ЗакрытьПринудительноФормуНастроек": 
//		*Результат - Структура
//		 **НастройкиИзменены - Булево
//	в переданном методе формы это параметр можно доопределить, далее в методе "ЗакрытьПринудительноФормуНастроек" форма 
//	закрывается с его передачей.
//  Отказ - Булево - параметр события "ПередЗакрытием" формы
//  ЗавершениеРаботы - Булево - параметр события "ПередЗакрытием" формы
//	ТекстПредупреждения - Строка - параметр события "ПередЗакрытием" формы
//  СтандартнаяОбработка - Булево - параметр события "ПередЗакрытием" формы
// 
Процедура ФормаНастроекПередЗакрытием(Форма, Оповещение, Отказ, ЗавершениеРаботы, ТекстПредупреждения, СтандартнаяОбработка) Экспорт
	
	Если ЗавершениеРаботы Тогда
		Возврат;		
	КонецЕсли; 
	
	Если НЕ Форма.Модифицированность Тогда
		Возврат;
	КонецЕсли;
	
	ДопПараметры = Новый Структура;
	ДопПараметры.Вставить("Форма", Форма);
	ДопПараметры.Вставить("Оповещение", Оповещение);	
	
	Отказ = Истина;
	ОповещениеВопроса = Новый ОписаниеОповещения("ВопросПередЗакрытиемФормыНастроекЗавершение", ЭтотОбъект, ДопПараметры);
	
	ПоказатьВопрос(ОповещениеВопроса
		, "Настройки были изменены. Сохранить изменения?"
		, РежимДиалогаВопрос.ДаНетОтмена
		,
		,
		, Форма.Заголовок);
		
КонецПроцедуры 

// Вызывается из обработчика команды формы-редактора настроек.
//
// Параметры:
//	Форма - ОкноКлиентскогоПриложения - форма-редактор настроек
//	Оповещение - ОписаниеОповещения - метод формы, отвечающий за запись настроек. Принимает в себя первый параметр
//	из метода "ЗакрытьПринудительноФормуНастроек": 
//		*Результат - Структура
//		 **НастройкиИзменены - Булево
//	в переданном методе формы это параметр можно доопределить, далее в методе "ЗакрытьПринудительноФормуНастроек" форма 
//	закрывается с его передачей.
// 
Процедура ФормаНастроекКомандаСохранитьиЗакрыть(Форма, Оповещение) Экспорт
	
	ДопПараметры = Новый Структура;
	ДопПараметры.Вставить("Форма", Форма);
	ДопПараметры.Вставить("Оповещение", Оповещение);
	
	ЗакрытьПринудительноФормуНастроек(ДопПараметры, Форма.Модифицированность);
	
КонецПроцедуры 

#КонецОбласти 

#Область Оповещения

Функция СобытияОповещений() Экспорт
	
	Результат = Новый Структура;
	Результат.Вставить("ЗаписьВопроса", "ЗаписьВопроса");
	
	Возврат Результат;
	
КонецФункции
 
#КонецОбласти 

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область ОбработчикиОповещений

&НаКлиенте
Процедура ВопросПередЗакрытиемФормыНастроекЗавершение(Результат, ДопПараметры) Экспорт
	
	Если Результат = Неопределено Тогда
		Возврат;
		
	ИначеЕсли Результат = КодВозвратаДиалога.Нет Тогда 
		ЗакрытьПринудительноФормуНастроек(ДопПараметры, Ложь);
		
	ИначеЕсли Результат = КодВозвратаДиалога.Да Тогда
		ЗакрытьПринудительноФормуНастроек(ДопПараметры, Истина);	
		
	КонецЕсли;	
	
КонецПроцедуры 

#КонецОбласти 

#Область ПередЗакрытиемФормыНастроек

&НаКлиенте
Процедура ЗакрытьПринудительноФормуНастроек(ДопПараметры, ЗаписатьИзменения) Экспорт
	
	Результат = Новый Структура;
	Результат.Вставить("НастройкиИзменены", ЗаписатьИзменения);
	
	Если ЗаписатьИзменения Тогда
		ВыполнитьОбработкуОповещения(ДопПараметры.Оповещение, Результат);
	КонецЕсли; 
	
	ДопПараметры.Форма.Модифицированность = Ложь;	
	ДопПараметры.Форма.Закрыть(Новый ФиксированнаяСтруктура(Результат));		
	
КонецПроцедуры

#КонецОбласти 

#КонецОбласти 